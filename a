import time
import requests
from scrapy import Selector
from coin import getTasks
from copy import deepcopy


def run():
    keys = getTasks.getTasks().btc123()
    db = getTasks.getTasks().getMongo()
    url = 'http://blockchain.hexun.com/blockinfo/index.html'
    for key in keys:
        response = requests.get(url)
        selector = Selector(text=response.text)
        lists = selector.xpath('.//div[@class="m_left fl"]/ul/li')
        for list in lists[:1]:
            url = list.xpath('h2/a/@href').extract_first()
            title(url, db, key)


def title(url, db, key):
    item = {}
    response = requests.get(url)
    if response.status_code != 404:
        response.encoding = 'gbk'
        selector = Selector(text=response.text)
        item['post_title'] = selector.xpath('.//div[@class="layout mg articleName"]/h1/text()').extract_first()
        item['created_at'] = selector.xpath('.//div[@class="tip fl"]/span/text()').extract_first()
        item['source_host'] = selector.xpath('.//div[@class="tip fl"]/a/text()').extract_first()
        item['read_count'] = 0
        item['original_url'] = url
        item['page_url'] = url
        item['screen_name'] = '匿名'
        item['text'] = ''
        contentlist = selector.xpath('.//div[@class="art_contextBox"]/p')
        for i in contentlist:
            contents = i.xpath('text()').extract()
            for content in contents:
                item['text'] += content
        item['time'] = int(time.time())
        # item['floor'] = int(list['id'])
        item['column'] = key['key']
        item['platform'] = '和讯文章'
        item['column1'] = '和讯文章'
        item['originalPlatformId'] = 124
        item['keywordId'] = key['keywordId']
        item['reptileType'] = key['reptileType']
        item['contentType'] = key['contentType']
        title = db.btc123.find_one({'post_title': item['post_title']})
        if title is None:
            print(item)
            getTasks.post_data(item)
            db.btc123.insert(deepcopy(item))


if __name__ == '__main__':
    run()
