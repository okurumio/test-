import pymysql

# host='114.55.84.165'
# password='Super@inter3i'


class Database(object):
    def __init__(self, table_name):
        self.dataList = list()
        self.table_name = table_name
        self.connection = pymysql.connect(host='114.55.84.165',
                                          user='root',
                                          password='Super@inter3i',
                                          db='huarun',
                                          charset='utf8mb4',
                                          cursorclass=pymysql.cursors.DictCursor)
        self.cursor = self.connection.cursor(pymysql.cursors.DictCursor)

    def commit(self):
        return self.connection.commit()

    def close_con(self):
        return self.connection.close()

    def select_all_count(self):
        sql = "SELECT COUNT(*) FROM %s" % (self.table_name)
        self.cursor.execute(sql)
        count = self.cursor.fetchall()
        return count[0]['COUNT(*)']

    # 评论标签
    def select_all_comment(self, last_id, is_next):
        if is_next:  # 上一页
            sql = "SELECT id, 评论内容, 品类 FROM `%s` where id > %s limit 500" % (self.table_name, last_id)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
        else:  # 下一页
            sql = "SELECT id, 评论内容, 品类 FROM `%s` where id < %s limit 500" % (self.table_name, last_id)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
            ret = list(reversed(ret))
        return ret

    def comment_update(self, sign, value, id):
        sql = "update %s set %s = '%s' where id = %d" % (self.table_name, sign, value, id)
        self.cursor.execute(sql)
        self.commit()

    # 折扣
    def select_all_message(self, last_id, is_next):
        ret = None
        if is_next:  # 上一页
            sql = "SELECT id, 促销信息, 购买送积分, 满折扣, 满减, 原价, 现价 FROM `%s` where 原价 is not NULL and 现价 is not NULL and id > %s limit 500" % (self.table_name, last_id)
            self.connection.ping(reconnect=True)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
        else:  # 下一页
            sql = "SELECT id, 促销信息, 购买送积分, 满折扣, 满减, 原价, 现价 FROM `%s` where 原价 is not NULL and 现价 is not NULL and id < %s limit 500" % (self.table_name, last_id)
            self.connection.ping(reconnect=True)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
            ret = list(reversed(ret))
        return ret

    def update_discount(self, id1, discount):
        sql = "update %s set 折扣 = %s where id = %s " % (self.table_name, discount, id1)
        self.cursor.execute(sql)
        self.commit()

    # 统计词频
    def select_comment_by_brand(self, brand, attr, sign):
        sql = "SELECT 评论内容 FROM `%s` WHERE 品牌 = '%s' AND %s = '%s'" % (self.table_name, brand, attr, sign)
        self.cursor.execute(sql)
        lists = self.cursor.fetchall()
        return lists

    # 商品标签
    def select_all_goods(self, last_id, is_next):
        if is_next:  # 上一页
            sql = "SELECT id, 商品名称 FROM `%s` where id > %s limit 100" % (self.table_name, last_id)
            self.connection.ping(reconnect=True)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
        else:  # 下一页
            sql = "SELECT id, 商品名称 FROM `%s` where id < %s limit 100" % (self.table_name, last_id)
            self.connection.ping(reconnect=True)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
            ret = list(reversed(ret))
        return ret

    def update_brand(self, sign, id1):
        sql = "update %s set 品类细分B = '%s' where id = %s " % (self.table_name, sign, id1)
        self.cursor.execute(sql)
        self.commit()

    def update_brand2(self, sign, id1):
        sql = "update %s set 功能 = '%s' where id = %s " % (self.table_name, sign, id1)
        self.cursor.execute(sql)
        self.commit()

    # 统计数量
    def get_count(self, lable):
        sql = "SELECT 品牌, count(*) FROM %s where %s = '正' group by 品牌" % (self.table_name, lable)
        self.cursor.execute(sql)
        lists = self.cursor.fetchall()
        return lists

    # 统计
    def select_all(self, last_id, is_next):
        if is_next:  # 上一页
            sql = "SELECT id, product_name FROM `%s` where id > %s limit 100" % (self.table_name, last_id)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
        else:  # 下一页
            sql = "SELECT id, product_name FROM `%s` where id < %s limit 100" % (self.table_name, last_id)
            self.cursor.execute(sql)
            ret = self.cursor.fetchall()
            ret = list(reversed(ret))
        return ret

    def update_brand3(self, brand, category, id1):
        sql = "update %s set brand = '%s', category = '%s' where id = %s" % (self.table_name, brand, category, id1)
        self.cursor.execute(sql)
        self.commit()

    # 获取数量
    def get_counts(self, group, stockval):
        sql = "SELECT %s, COUNT(*) FROM %s where stock = '%s' and %s is not NULL GROUP BY %s" % (group, self.table_name, stockval, group, group)
        self.cursor.execute(sql)
        count = self.cursor.fetchall()
        return count

    def get_all_counts(self, group):
        sql = "SELECT %s, COUNT(*) FROM %s GROUP BY %s" % (group, self.table_name, group)
        self.cursor.execute(sql)
        count = self.cursor.fetchall()
        return count
